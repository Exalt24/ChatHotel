<% if flash[:success] %>
  <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4 mt-4 ml-4 mr-4" role="alert">
    <span class="block sm:inline"><%= flash[:success] %></span>
  </div>
<% elsif flash[:error] %>
  <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4 mt-4 ml-4 mr-4" role="alert">
    <span class="block sm:inline"><%= flash[:error] %></span>
  </div>
<% end %>

<% if @booking.errors.any? %>
  <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4 mt-4 ml-4 mr-4" role="alert">
    <ul>
      <% @booking.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  </div>
<% end %>

<h1 class="text-3xl font-bold text-center mb-8 mt-8 text-white">Book a Room</h1>
<div class="bg-gray-800 flex justify-center mb-8">
  <div class="w-full max-w-md">
    <%= form_with(model: @booking, url: bookings_path, method: :post, html: { class: "bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4" }) do |form| %>

      <%= form.hidden_field :hotel_id, value: @hotel.id %>

      <div class="mb-4">
        <% booked_hotel = Hotel.find(@hotel.id) %>
        <%= form.label :hotel_name, "Booked Hotel", class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= text_field_tag :hotel_name, booked_hotel.name, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline", readonly: true %>
      </div>

      <div class="mb-4">
        <%= form.label :booked_name, "Booked Name", class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= text_field_tag :booked_name, @booking.booked_name, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline", readonly: true %>
      </div>

      <div class="mb-4">
        <%= form.label :booked_number, "Booked Number", class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= text_field_tag :booked_number, @booking.booked_number, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline", readonly: true %>
      </div>

      <div class="mb-4">
        <%= form.label :start_date, "Check-in Date", class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= form.date_field :start_date, class: "check-in-date shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
      </div>

      <div class="mb-4">
        <%= form.label :end_date, "Check-out Date", class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= form.date_field :end_date, class: "check-out-date shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
      </div>

      <div class="mb-6">
        <%= form.label :room_type, "Room Type", class: "block text-gray-700 text-sm font-bold mb-2" %>
        <div class="flex items-center gap-2">
          <%= form.select :room_type, [['Single', 'single_room'], ['Double', 'double_room'], ['Suite', 'suite']], {}, class: "room-type shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline flex-grow" %>
          <span id="room-price" class="text-gray-700 font-bold"></span>
        </div>
      </div>

      

      <div class="mb-4">
        <button type="button" id="calculate-price" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
          Calculate Price
        </button> 
      </div>

      <div class="flex items-center justify-between">
        <%= link_to "Back to Hotels", hotels_path, class: "bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" %>
        <%= form.submit 'Book Room', class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline", data: { confirm: 'Are you sure you want to book this room?' } %>
      </div>
      </div>

    <% end %>
  </div>
</div>

<!-- Modal for displaying the total cost -->
<div id="priceModal" class="fixed z-10 inset-0 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
            <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">
              Total Cost
            </h3>
            <div class="mt-2">
              <p class="text-sm text-gray-500">
                The total cost for your stay is: <span id="modal-total-cost">0</span>
              </p>
            </div>
          </div>
        </div>
      </div>
      <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm" id="close-modal">
          Close
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const startDateField = document.querySelector('.check-in-date');
    const endDateField = document.querySelector('.check-out-date');
    const roomTypeField = document.querySelector('.room-type');
    const calculatePriceButton = document.getElementById('calculate-price');
    const roomPriceSpan = document.getElementById('room-price');
    const priceModal = document.getElementById('priceModal');
    const modalTotalCost = document.getElementById('modal-total-cost');
    const closeModalButton = document.getElementById('close-modal');

    function updateRoomPrice() {
      const roomType = roomTypeField.value;
      const hotelId = '<%= @hotel.id %>';

      fetch('/hotels/' + hotelId + '/room_price', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify({ room_type: roomType })
      })
      .then(response => response.json())
      .then(data => {
        if (data.room_price !== undefined) {
          roomPriceSpan.textContent = 'Price: $' + data.room_price;
        } else if (data.error) {
          alert('Error fetching room price: ' + data.error);
        }
      })
      .catch(error => {
        console.error('Error:', error);
      });
    }

    function calculatePrice() {
      const startDate = startDateField.value;
      const endDate = endDateField.value;
      const roomType = roomTypeField.value;
      const hotelId = '<%= @hotel.id %>';

      if (startDate && endDate && roomType) {
        fetch('<%= calculate_price_bookings_path %>', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
          },
          body: JSON.stringify({
            start_date: startDate,
            end_date: endDate,
            room_type: roomType,
            hotel_id: hotelId
          })
        })
        .then(response => response.json())
        .then(data => {
          if (data.total_cost !== undefined) {
            modalTotalCost.textContent = data.total_cost;
            priceModal.classList.remove('hidden');
          } else if (data.error) {
            alert('Error calculating price: ' + data.error);
          }
        })
        .catch(error => {
          console.error('Error:', error);
        });
      } else {
        alert('Please fill in all fields.');
      }
    }

    roomTypeField.addEventListener('change', updateRoomPrice);
    calculatePriceButton.addEventListener('click', calculatePrice);

    closeModalButton.addEventListener('click', function() {
      priceModal.classList.add('hidden');
    });

    // Initial room price update
    updateRoomPrice();
  });
</script>
